labs(x="Accident Types", title = "Accident Types")
head(wc$LOC.1.CODE)
head(wc$Loc.1.Name)
names(wc)
filter(wc, X00.FAV...Accident.Cause != '') %>%
group_by(X00.FAV...Accident.Cause) %>%
summarise(count = n()) %>%
filter(count > 1) %>%
ggplot(aes(X00.FAV...Accident.Cause, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Accident Causes", title = "Accident Causes >1 Incident")
filter(wc, X00.FAV...Secondary.Cause != '') %>%
group_by(X00.FAV...Secondary.Cause) %>%
summarise(count = n()) %>%
filter(count > 1) %>%
ggplot(aes(X00.FAV...Secondary.Cause, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Secondary Cause", title = "Accident Secondary Causes >1 Incident")
head(wc$HAZARD.CODE)
head(wc$HAZARD.CODE, 200)
head(wc$HAZARD.Desc, 200)
head(wc$Hazard.Desc, 200)
head(wc$Nature.Desc, 200)
filter(wc, Nature.Desc != '') %>%
group_by(Nature.Desc) %>%
summarise(count = n()) %>%
filter(count > 1) %>%
ggplot(aes(Nature.Desc, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Nature of Injury", title = "Nature of Injury >1 Incident")
filter(wc, Nature.Desc != '') %>%
group_by(Nature.Desc) %>%
summarise(count = n()) %>%
filter(count > 2) %>%
ggplot(aes(Nature.Desc, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Nature of Injury", title = "Nature of Injury >1 Incident")
filter(wc, Nature.Desc != '') %>%
group_by(Nature.Desc) %>%
summarise(count = n()) %>%
filter(count > 3) %>%
ggplot(aes(Nature.Desc, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Nature of Injury", title = "Nature of Injury >1 Incident")
filter(wc, Nature.Desc != '') %>%
group_by(Nature.Desc) %>%
summarise(count = n()) %>%
filter(count > 4) %>%
ggplot(aes(Nature.Desc, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Nature of Injury", title = "Nature of Injury >1 Incident")
filter(wc, Nature.Desc != '') %>%
group_by(Nature.Desc) %>%
summarise(count = n()) %>%
filter(count > 5) %>%
ggplot(aes(Nature.Desc, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Nature of Injury", title = "Nature of Injury >1 Incident")
filter(wc, Nature.Desc != '') %>%
group_by(Nature.Desc) %>%
summarise(count = n()) %>%
filter(count > 6) %>%
ggplot(aes(Nature.Desc, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Nature of Injury", title = "Nature of Injury >1 Incident")
filter(wc, Nature.Desc != '') %>%
group_by(Nature.Desc) %>%
summarise(count = n()) %>%
filter(count > 7) %>%
ggplot(aes(Nature.Desc, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Nature of Injury", title = "Nature of Injury >1 Incident")
filter(wc, Nature.Desc != '') %>%
group_by(Nature.Desc) %>%
summarise(count = n()) %>%
filter(count > 8) %>%
ggplot(aes(Nature.Desc, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Nature of Injury", title = "Nature of Injury >1 Incident")
filter(wc, Nature.Desc != '') %>%
group_by(Nature.Desc) %>%
summarise(count = n()) %>%
filter(count > 9) %>%
ggplot(aes(Nature.Desc, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Nature of Injury", title = "Nature of Injury >1 Incident")
filter(wc, Nature.Desc != '') %>%
group_by(Nature.Desc) %>%
summarise(count = n()) %>%
filter(count > 10) %>%
ggplot(aes(Nature.Desc, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Nature of Injury", title = "Nature of Injury >1 Incident")
filter(wc, Nature.Desc != '') %>%
group_by(Nature.Desc) %>%
summarise(count = n()) %>%
filter(count > 11) %>%
ggplot(aes(Nature.Desc, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Nature of Injury", title = "Nature of Injury >1 Incident")
filter(wc, Nature.Desc != '') %>%
group_by(Nature.Desc) %>%
summarise(count = n()) %>%
filter(count > 12) %>%
ggplot(aes(Nature.Desc, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Nature of Injury", title = "Nature of Injury >1 Incident")
filter(wc, Nature.Desc != '') %>%
group_by(Nature.Desc) %>%
summarise(count = n()) %>%
filter(count > 10) %>%
ggplot(aes(Nature.Desc, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Nature of Injury", title = "Nature of Injury >1 Incident")
filter(wc, Nature.Desc != '') %>%
group_by(Nature.Desc) %>%
summarise(count = n()) %>%
filter(count > 20) %>%
ggplot(aes(Nature.Desc, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Nature of Injury", title = "Nature of Injury >1 Incident")
names(wc)
head(wc$Nature.Descrip, 200)
head(wc$Part.Descrip, 200)
head(wc$Part.Desc.1, 200)
filter(wc, Part.Desc.1 != '') %>%
group_by(Part.Desc.1) %>%
summarise(count = n()) %>%
filter(count > 1) %>%
ggplot(aes(Part.Desc.1, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Body Part", title = "Body Parts Injured >1 Incident")
filter(wc, Part.Desc.1 != '') %>%
group_by(Part.Desc.1) %>%
summarise(count = n()) %>%
filter(count > 2) %>%
ggplot(aes(Part.Desc.1, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Body Part", title = "Body Parts Injured >1 Incident")
filter(wc, Part.Desc.1 != '') %>%
group_by(Part.Desc.1) %>%
summarise(count = n()) %>%
filter(count > 5) %>%
ggplot(aes(Part.Desc.1, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Body Part", title = "Body Parts Injured >1 Incident")
filter(wc, Part.Desc.1 != '') %>%
group_by(Part.Desc.1) %>%
summarise(count = n()) %>%
filter(count > 10) %>%
ggplot(aes(Part.Desc.1, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Body Part", title = "Body Parts Injured >1 Incident")
filter(wc, Part.Desc.1 != '') %>%
group_by(Part.Desc.1) %>%
summarise(count = n()) %>%
filter(count > 20) %>%
ggplot(aes(Part.Desc.1, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Body Part", title = "Body Parts Injured >1 Incident")
filter(wc, Part.Desc.1 != '') %>%
group_by(Part.Desc.1) %>%
summarise(count = n()) %>%
filter(count > 30) %>%
ggplot(aes(Part.Desc.1, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Body Part", title = "Body Parts Injured >1 Incident")
filter(wc, Part.Desc.1 != '') %>%
group_by(Part.Desc.1) %>%
summarise(count = n()) %>%
filter(count > 50) %>%
ggplot(aes(Part.Desc.1, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Body Part", title = "Body Parts Injured >1 Incident")
filter(wc, Part.Desc.1 != '') %>%
group_by(Part.Desc.1) %>%
summarise(count = n()) %>%
filter(count > 100) %>%
ggplot(aes(Part.Desc.1, count)) +
geom_bar(stat="identity") +
coord_flip() +
labs(x="Body Part", title = "Body Parts Injured >1 Incident")
names(wc)
ggplot(wc, aes(Claimant.Months.Employed)) + geom_histogram()
ggplot(wc, aes(Claimant.Months.Employed)) + geom_histogram(binwidth=1)
ggplot(wc, aes(Claimant.Months.Employed)) + geom_histogram(binwidth=2)
head(wc$Claimant.Months.Employed)
filter(wc, Claimant.Months.Employed < 400) %>% ggplot(aes(Claimant.Months.Employed)) + geom_histogram(binwidth=1)
filter(wc, Claimant.Months.Employed < 200) %>% ggplot(aes(Claimant.Months.Employed)) + geom_histogram(binwidth=1)
filter(wc, Claimant.Months.Employed < 150) %>% ggplot(aes(Claimant.Months.Employed)) + geom_histogram(binwidth=1)
filter(wc, Claimant.Months.Employed < 20) %>% ggplot(aes(Claimant.Months.Employed)) + geom_histogram(binwidth=1)
filter(wc, Claimant.Months.Employed < 50) %>% ggplot(aes(Claimant.Months.Employed)) + geom_histogram(binwidth=1)
filter(wc, Claimant.Months.Employed > 0) %>% ggplot(aes(Claimant.Months.Employed)) + geom_histogram(binwidth=1)
filter(wc, Claimant.Months.Employed > 0) %>% ggplot(aes(Claimant.Months.Employed)) + geom_histogram(binwidth=2)
filter(wc, Claimant.Months.Employed > 0) %>% ggplot(aes(Claimant.Months.Employed)) + geom_histogram(binwidth=3)
filter(wc, Claimant.Months.Employed > 0) %>% ggplot(aes(Claimant.Months.Employed)) + geom_histogram(binwidth=4)
filter(wc, Claimant.Months.Employed > 0 & Claimant.Months.Employed < 25) %>% ggplot(aes(Claimant.Months.Employed)) + geom_histogram(binwidth=1)
x <- c(10.4, 5.6, 3.1, 6.4, 21.7)
assign("x", c(10.4, 5.6, 3.1, 6.4, 21.7))
c(10.4, 5.6, 3.1, 6.4, 21.7) -> x
1/x
y <- c(x, 0, x)
v <- 2*x + y + 1
sum((x-mean(x))^2)/(length(x)-1)
sqrt(-17)
sqrt(-17+0i)
seq(-5, 5, by=.2) -> s3
s4 <- seq(length=51, from=-5, by=.2)
s5 <- rep(x, times=5)
s6 <- rep(x, each=5)
temp <- x > 13
z <- c(1:3,NA);  ind <- is.na(z)
0/0
Inf - Inf
labs <- paste(c("X","Y"), 1:10, sep="")
labs
y <- x[!is.na(x)]
(x+1)[(!is.na(x)) & x>0] -> z
x[1:10]
c("x","y")[rep(c(1,2,2,1), times=4)]
y <- x[-(1:5)]
fruit <- c(5, 10, 1, 20)
names(fruit) <- c("orange", "banana", "apple", "peach")
lunch <- fruit[c("apple","orange")]
x[is.na(x)] <- 0
y[y < 0] <- -y[y < 0]
y <- abs(y)
setwd("~/DSBA-6100")
claims <- read.csv("~/DSBA-6100/claim_data_sample.csv", stringsAsFactors = FALSE)
View(claims)
names(claims)
library(ggplot2)
str(claims)
g <- ggplot(claims, aes(as.numeric(ClaimantAge_at_DOI)))
g + geom_histogram()
summary(as.numeric(claims$ClaimantAge_at_DOI))
claims$ClaimantAge_at_DOI <- as.numeric(claims$ClaimantAge_at_DOI)
filter(claims, ClaimantAge_at_DOI > 18) %>% ggplot(aes(ClaimantAge_at_DOI)) + geom_histogram()
filter(claims, ClaimantAge_at_DOI > 18) %>% ggplot(aes(ClaimantAge_at_DOI)) + geom_histogram(binwidth = 1)
trans <- read.csv("~/DSBA-6100/transaction_data_sample.csv", stringsAsFactors=FALSE)
str(trans)
names(claims)
summary(trans$IsSubrogation)
summary(trans)
summary(claims)
?read.csv
?View
View(claims)
mean(claims$Gender == "Male")
ggplot(claims, aes(Gender)) + geom_bar()
ggplot(claims, aes(Gender)) + geom_bar(col='blue')
ggplot(claims, aes(Gender)) + geom_bar(fill='blue')
ggplot(claims, aes(Gender)) + geom_bar(fill='steelblue')
str(claims$PayCategory)
names(claim)
names(claims)
?ggplot
ggplot(claims, aes(Gender)) + geom_bar()
ggplot(claims, aes(Gender)) + geom_bar(fill='steelblue')
names(claims)
setwd "~/DSBA-6100"
setwd("~/DSBA-6100")
install.packages("SnowballC")
install.packages('wordcloud')
install.packages('tm')
library(tm)
library(wordcloud)
library(SnowballC)
getwd()
?path
folder <- "~/DSBA-6100/hamlet"
my_hamlet_txt <- VCorpus(DirSource(folder))
inspect(my_hamlet_txt)
my_hamlet_txt1 <- tm_map(my_hamlet_txt, content_transformer(stripWhitespace))
my_hamlet_txt2 <- tmp_map*(my_hamlet_txt1, content_transformer(tolower))
my_hamlet_txt2 <- tm_map*(my_hamlet_txt1, content_transformer(tolower))
my_hamlet_txt2 <- tm_map(my_hamlet_txt1, content_transformer(tolower))
my_hamlet_txt3 <- tm_map(my_hamlet_txt2, removeWords, stopwords('English'))
my_hamlet_txt4 <- tm_map(my_hamlet_txt3, content_transformer(stemDocument))
wordcloud(words = my_hamlet_txt4, min.freq = 10, max.words = 500, random.order='false')
wordcloud(words = my_hamlet_txt4, min.freq = 10, max.words = 500, random.order='false')
wordcloud(words = my_hamlet_txt3, min.freq = 10, max.words = 500, random.order='false')
wordcloud(words = my_hamlet_txt4, min.freq = 10, max.words = 500, random.order='false')
setwd("~/DSBA-6100/DSBA6100-GrpProject")
df <- read.csv('test.csv')
df <- read.csv('testcsv.csv')
df
str(df)
View(df)
wordcloud(words = df$patent_abstract)
wordcloud(words = df$patent_abstract[3])
wordcloud(words = df$patent_title)
wordcloud(words = df$patent_title, min.freq=1)
wordcloud(words = df$patent_abstract, min.freq=1)
wordcloud(words = df$patent_abstract[3], min.freq=1)
wordcloud(words = df$patent_title, min.freq=1)
?wordcloud
exp(0.7045) -1
exp(11.5032) -1
exp(11.5)
exp(0.7045) - 1
exp(0.7045)
exp(1.25)
exp(1.25) - 1
exp(0.7045)
exp(0.7045) - 1
exp(0.7045) / (exp(0.7045) + 1)
exp(0.115032)
exp(0.115032) / (exp(0.115032) + 1)
setwd(~)
setwd('~')
airline <- readcsv('airline.csv')
airline <- read.csv('airline.csv')
str(airline)
airline <- read.csv('airline.csv', strinsAsFactors=FALSE)
airline <- read.csv('airline.csv', stringsAsFactors=FALSE)
str(airline)
library(ggplot2)
summary(airline)
names(airline)
ggplot(airline, aes(type_traveller, mean(overall_rating))) + geom_bar()
ggplot(airline, aes(type_traveller, overall_rating)) + geom_bar()
ggplot(airline, aes(type_traveller, overall_rating)) + geom_bar(stat="identity")
ggplot(airline, aes(type_traveller, mean(overall_rating))) + geom_bar(stat="identity")
ggplot(airline, aes(type_traveller, mean(overall_rating, na.rm=T))) + geom_bar()
ggplot(airline, aes(type_traveller, mean(overall_rating, na.rm=T))) + geom_bar(stat="identity")
ggplot(airline, aes(type_traveller, mean(overall_rating, na.rm=TRUE))) + geom_bar(stat="identity")
ggplot(airline, aes(type_traveller, mean(overall_rating, na.rm=TRUE))) + geom_bar(stat="identity")
setwd('~/DSBA 5122/Project')
voter <- read_csv('meck_voter.csv')
library(readr)
library(stringr)
library(dplyr)
voter <- read_csv('meck_voter.csv')
names(voter)
unique(voter$race_code)
unique(voter$ethnic_code)
unique(voter$sex_code)
summary(voter$age)
library(readr)
library(stringr)
library(dplyr)
# Set working directory to location of CSV file
setwd('~/DSBA 5122/Project')
# Read the data as tbl_df
voter <- read_csv('meck_voter.csv')
## CLEAN ##
# Party Codes
voter$party_code <- str_replace_all(voter$party_code, '\r', '')
voter$party_code[voter$party_code == ""] <- NA
# Sex Codes
voter$sex_code <- str_replace_all(voter$sex_code, '', 'U')
voter$sex_code <- str_replace_all(voter$sex_code, 'U', 'unk')
# More Descriptive Race Codes
voter$race_code[voter$race_code == 'W'] <- 'White'
voter$race_code[voter$race_code == 'U'] <- 'Undesignated'
voter$race_code[voter$race_code == 'B'] <- 'Black'
voter$race_code[voter$race_code == 'O'] <- 'Other'
voter$race_code[voter$race_code == 'A'] <- 'Asian'
voter$race_code[voter$race_code == 'M'] <- 'Multi-Racial'
voter$race_code[voter$race_code == 'I'] <- 'Am-Indian'
# District Descriptions
voter$ward_desc <- str_replace_all(voter$ward_desc,
'CITY COUNCIL DISTRICT ',
'')
voter$cong_dist_desc <- str_replace_all(voter$cong_dist_desc,
'CONGRESSIONAL DISTRICT ',
'')
voter$super_court_desc <- str_replace_all(voter$super_court_desc,
'JUDICIAL DISTRICT ',
'')
voter$nc_senate_desc <- str_replace_all(voter$nc_senate_desc,
'NC SENATE DISTRICT ',
'')
voter$nc_house_desc <- str_replace_all(voter$nc_house_desc,
'NC HOUSE DISTRICT ',
'')
voter$county_commiss_desc <- str_replace_all(voter$county_commiss_desc,
'BOARD OF COMMISSIONERS DISTRICT ',
'')
voter$school_dist_desc <- str_replace_all(voter$school_dist_desc,
'SCHOOL BOARD DIST ',
'')
# Create Aggregated Vote Count on Election Date, grouped by demographics
ct_by_dt <- voter %>%
group_by(edate, party_code, sex_code, race_code) %>%
summarise(n = n())
# Write CSV to RDA for quick load in shiny
saveRDS(ct_by_dt, "ct_by_dt.rda")
# Create Aggregated Vote Counts by Zip Code for Colorpleth
meck_county <- 37119 #FIPS code for Mecklenburg County
# create data frame for plotting
zip_votes <- voter %>%
group_by(zip_code) %>%
summarise(value = n()) %>%
rename(region = zip_code) %>%
mutate(region = as.character(region))
saveRDS(zip_votes, "zip_votes.rda")
voter$sex_code[voter$race_code == ''] <- 'unk'
voter$sex_code[voter$race_code == 'U'] <- 'unk'
voter <- read_csv('meck_voter.csv')
voter$party_code <- str_replace_all(voter$party_code, '\r', '')
voter$party_code[voter$party_code == ""] <- NA
voter$sex_code[voter$sex_code == ''] <- 'unk'
voter$sex_code[voter$sex_code == 'U'] <- 'unk'
voter$race_code[voter$race_code == 'W'] <- 'White'
voter$race_code[voter$race_code == 'U'] <- 'Undesignated'
voter$race_code[voter$race_code == 'B'] <- 'Black'
voter$race_code[voter$race_code == 'O'] <- 'Other'
voter$race_code[voter$race_code == 'A'] <- 'Asian'
voter$race_code[voter$race_code == 'M'] <- 'Multi-Racial'
voter$race_code[voter$race_code == 'I'] <- 'Am-Indian'
voter$ward_desc <- str_replace_all(voter$ward_desc,
'CITY COUNCIL DISTRICT ',
'')
voter$cong_dist_desc <- str_replace_all(voter$cong_dist_desc,
'CONGRESSIONAL DISTRICT ',
'')
voter$super_court_desc <- str_replace_all(voter$super_court_desc,
'JUDICIAL DISTRICT ',
'')
voter$nc_senate_desc <- str_replace_all(voter$nc_senate_desc,
'NC SENATE DISTRICT ',
'')
voter$nc_house_desc <- str_replace_all(voter$nc_house_desc,
'NC HOUSE DISTRICT ',
'')
voter$county_commiss_desc <- str_replace_all(voter$county_commiss_desc,
'BOARD OF COMMISSIONERS DISTRICT ',
'')
voter$school_dist_desc <- str_replace_all(voter$school_dist_desc,
'SCHOOL BOARD DIST ',
'')
ct_by_dt <- voter %>%
group_by(edate, party_code, sex_code, race_code) %>%
summarise(n = n())
saveRDS(ct_by_dt, "ct_by_dt.rda")
meck_county <- 37119 #FIPS code for Mecklenburg County
zip_votes <- voter %>%
group_by(zip_code) %>%
summarise(value = n()) %>%
rename(region = zip_code) %>%
mutate(region = as.character(region))
saveRDS(zip_votes, "zip_votes.rda")
setwd("~/DSBA 5122/Project/Viz_Project/shinyapp")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
str(ct_by_dt)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?plotly
shiny::runApp()
install.packages('shiny')
shiny::runApp()
shiny::runApp()
